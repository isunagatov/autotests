buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
    }
}

plugins {
    id 'java'
    id 'java-library'
    id 'java-gradle-plugin'
    id "io.qameta.allure" version "2.12.0"
}
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

group = 'autotests'
version = '1.0-SNAPSHOT'

configurations {
    testCompile
}
apply plugin: 'java'
compileJava.options.encoding = 'utf-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
apply plugin: "io.qameta.allure"

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {

    // Selenium версии 4.9.1
    testImplementation 'org.seleniumhq.selenium:selenium-java:4.9.1'
    testImplementation 'org.seleniumhq.selenium:selenium-remote-driver:4.9.1'
    testImplementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.9.1'

    testImplementation 'org.testng:testng:7.11.0'
    testImplementation 'com.codeborne:selenide:7.9.3'
    //testImplementation group: 'com.google.guava', name: 'guava', version: '31.0.1-jre'
    testImplementation 'org.postgresql:postgresql:42.7.7'

    implementation('org.jsoup:jsoup') {
        version {
            strictly '1.20.1'
        }
    }
    testImplementation group: 'io.qameta.allure', name: 'allure-selenide', version: '2.25.0'
    testImplementation 'io.qameta.allure:allure-testng:2.25.0'
    testImplementation 'io.qameta.allure:allure-commandline:2.25.0'
    testImplementation 'io.qameta.allure:allure-assertj:2.25.0'
    //testImplementation 'io.qameta.allure:allure-rest-assured:2.12.1'
    testImplementation 'io.qameta.allure:allure-java-commons:2.25.0'

    testImplementation 'org.aspectj:aspectjweaver:1.9.24'

    implementation 'org.json:json:20210307'
    implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.13'
    implementation 'org.apache.httpcomponents:httpcore:4.4.14'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.apache.httpcomponents:httpcore:4.4.14'
    implementation 'org.apache.commons:commons-exec:1.3'
    implementation 'org.apache.commons:commons-compress:1.26.0'
    implementation group: 'org.springframework', name: 'spring-core', version: '6.1.3'
    implementation group: 'org.springframework', name: 'spring-web', version: '3.0.2.RELEASE'
    testImplementation group: 'jcifs', name: 'jcifs', version: '1.3.17'
    testImplementation group: 'org.apache.commons', name: 'commons-vfs2', version: '2.10.0'
}

tasks.register('testNG', Test) {
    testClassesDirs = testing.suites.test.sources.output.classesDirs
    classpath = testing.suites.test.sources.runtimeClasspath
    jvmArgs '-Dselenide.browser=Chrome'
    jvmArgs "-Dtestng.dtd.http=true"
    useTestNG {
        suites 'src/test/resources/testng.xml'
    }
    //reports.html.destination = file("$buildDir/reports/testng")
    systemProperty 'selenide.savePageSource', 'false'
    systemProperty 'selenide.fastSetValue', 'false'
    systemProperty 'selenide.headless', 'false'
    systemProperty 'selenide.timeout', '10000'

    testLogging {
        exceptionFormat = 'full'
        showStackTraces = "true"
    }
    if (System.getProperty("selenoid") != null) systemProperty "selenoid", System.getProperty("selenoid")
    //systemProperty "selenoid", System.getProperty("selenoid")

}

test {
    useTestNG {}
}